{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Sviatoslav Oliinyk\\\\Desktop\\\\NULPSecondCourse\\\\SecondSemestr\\\\WEB\\\\angular-web-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { UserComponent } from './user.component';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientTestingModule, HttpTestingController } from \"@angular/common/http/testing\";\nimport { RouterTestingModule } from \"@angular/router/testing\";\nimport { CookieService } from \"../services/cookie.service\";\ndescribe('UserComponent', () => {\n  let component;\n  let fixture;\n  let httpTestingController;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [ReactiveFormsModule, FormsModule, HttpClientTestingModule, RouterTestingModule, CookieService],\n      declarations: [UserComponent]\n    }).compileComponents();\n    let cookie = {};\n    let value_credentials = {\n      password: 'string',\n      username: 'string'\n    };\n    let value_user = {\n      first_name: 'string',\n      second_name: 'string',\n      username: 'string',\n      email: 'string'\n    }; // let minutes = 60\n    // let expires = '';\n    // if (minutes) {\n    //   let date = new Date();\n    //   date.setTime(date.getTime() + minutes * 60 * 1000);\n    //   expires = '; expires=' + date.toUTCString();\n    // }\n    // document.cookie = 'user' + '=' + (value_user || '') + expires + '; path=/';\n    // document.cookie = 'credentials' + '=' + (value_credentials || '') + expires + '; path=/';\n\n    cookie.setCookie('user', JSON.stringify(value_user), 60);\n    cookie.setCookie('credentials', JSON.stringify(value_credentials), 60);\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(UserComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n    httpTestingController = TestBed.inject(HttpTestingController);\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should make put request', function () {\n    component.submit();\n    const req = httpTestingController.match('http://localhost:8080/api/v1/user/put');\n    expect(req[0].request.method).toEqual('PUT');\n  });\n  it('should make delete request', function () {\n    component.delete();\n    const req = httpTestingController.match('http://localhost:8080/api/v1/user/delete');\n    expect(req[0].request.method).toEqual('DELETE');\n  });\n  it('should changeEditableState', () => {\n    component.changeEditableState();\n    expect(component).toBeTruthy();\n  });\n});","map":{"version":3,"sources":["C:/Users/Sviatoslav Oliinyk/Desktop/NULPSecondCourse/SecondSemestr/WEB/angular-web-app/src/app/user/user.component.spec.ts"],"names":["TestBed","UserComponent","FormsModule","ReactiveFormsModule","HttpClientTestingModule","HttpTestingController","RouterTestingModule","CookieService","describe","component","fixture","httpTestingController","beforeEach","configureTestingModule","imports","declarations","compileComponents","cookie","value_credentials","password","username","value_user","first_name","second_name","email","setCookie","JSON","stringify","createComponent","componentInstance","detectChanges","inject","it","expect","toBeTruthy","submit","req","match","request","method","toEqual","delete","changeEditableState"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,gBAAjD;AACA,SAASC,uBAAT,EAAkCC,qBAAlC,QAA+D,8BAA/D;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACAC,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC5B,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,qBAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMZ,OAAO,CAACa,sBAAR,CAA+B;AACjCC,MAAAA,OAAO,EAAE,CAACX,mBAAD,EAAsBD,WAAtB,EAAmCE,uBAAnC,EAA4DE,mBAA5D,EAAiFC,aAAjF,CADwB;AAEjCQ,MAAAA,YAAY,EAAE,CAACd,aAAD;AAFmB,KAA/B,EAIDe,iBAJC,EAAN;AAKA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,iBAAiB,GAAG;AAAEC,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,QAAQ,EAAE;AAAhC,KAAxB;AACA,QAAIC,UAAU,GAAG;AAAEC,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,WAAW,EAAE,QAArC;AAA+CH,MAAAA,QAAQ,EAAE,QAAzD;AAAmEI,MAAAA,KAAK,EAAE;AAA1E,KAAjB,CARmB,CASnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAP,IAAAA,MAAM,CAACQ,SAAP,CAAiB,MAAjB,EAAyBC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAAzB,EAAqD,EAArD;AACAJ,IAAAA,MAAM,CAACQ,SAAP,CAAiB,aAAjB,EAAgCC,IAAI,CAACC,SAAL,CAAeT,iBAAf,CAAhC,EAAmE,EAAnE;AACH,GApBS,EAAV;AAqBAN,EAAAA,UAAU,CAAC,MAAM;AACbF,IAAAA,OAAO,GAAGV,OAAO,CAAC4B,eAAR,CAAwB3B,aAAxB,CAAV;AACAQ,IAAAA,SAAS,GAAGC,OAAO,CAACmB,iBAApB;AACAnB,IAAAA,OAAO,CAACoB,aAAR;AACAnB,IAAAA,qBAAqB,GAAGX,OAAO,CAAC+B,MAAR,CAAe1B,qBAAf,CAAxB;AACH,GALS,CAAV;AAMA2B,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACxB,SAAD,CAAN,CAAkByB,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAY;AACtCvB,IAAAA,SAAS,CAAC0B,MAAV;AACA,UAAMC,GAAG,GAAGzB,qBAAqB,CAAC0B,KAAtB,CAA4B,uCAA5B,CAAZ;AACAJ,IAAAA,MAAM,CAACG,GAAG,CAAC,CAAD,CAAH,CAAOE,OAAP,CAAeC,MAAhB,CAAN,CAA8BC,OAA9B,CAAsC,KAAtC;AACH,GAJC,CAAF;AAKAR,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAY;AACzCvB,IAAAA,SAAS,CAACgC,MAAV;AACA,UAAML,GAAG,GAAGzB,qBAAqB,CAAC0B,KAAtB,CAA4B,0CAA5B,CAAZ;AACAJ,IAAAA,MAAM,CAACG,GAAG,CAAC,CAAD,CAAH,CAAOE,OAAP,CAAeC,MAAhB,CAAN,CAA8BC,OAA9B,CAAsC,QAAtC;AACH,GAJC,CAAF;AAKAR,EAAAA,EAAE,CAAC,4BAAD,EAA+B,MAAM;AACnCvB,IAAAA,SAAS,CAACiC,mBAAV;AACAT,IAAAA,MAAM,CAACxB,SAAD,CAAN,CAAkByB,UAAlB;AACH,GAHC,CAAF;AAIH,CAhDO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { UserComponent } from './user.component';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientTestingModule, HttpTestingController } from \"@angular/common/http/testing\";\r\nimport { RouterTestingModule } from \"@angular/router/testing\";\r\nimport { CookieService } from \"../services/cookie.service\";\r\ndescribe('UserComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    let httpTestingController;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            imports: [ReactiveFormsModule, FormsModule, HttpClientTestingModule, RouterTestingModule, CookieService],\r\n            declarations: [UserComponent]\r\n        })\r\n            .compileComponents();\r\n        let cookie = {};\r\n        let value_credentials = { password: 'string', username: 'string' };\r\n        let value_user = { first_name: 'string', second_name: 'string', username: 'string', email: 'string' };\r\n        // let minutes = 60\r\n        // let expires = '';\r\n        // if (minutes) {\r\n        //   let date = new Date();\r\n        //   date.setTime(date.getTime() + minutes * 60 * 1000);\r\n        //   expires = '; expires=' + date.toUTCString();\r\n        // }\r\n        // document.cookie = 'user' + '=' + (value_user || '') + expires + '; path=/';\r\n        // document.cookie = 'credentials' + '=' + (value_credentials || '') + expires + '; path=/';\r\n        cookie.setCookie('user', JSON.stringify(value_user), 60);\r\n        cookie.setCookie('credentials', JSON.stringify(value_credentials), 60);\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(UserComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n        httpTestingController = TestBed.inject(HttpTestingController);\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('should make put request', function () {\r\n        component.submit();\r\n        const req = httpTestingController.match('http://localhost:8080/api/v1/user/put');\r\n        expect(req[0].request.method).toEqual('PUT');\r\n    });\r\n    it('should make delete request', function () {\r\n        component.delete();\r\n        const req = httpTestingController.match('http://localhost:8080/api/v1/user/delete');\r\n        expect(req[0].request.method).toEqual('DELETE');\r\n    });\r\n    it('should changeEditableState', () => {\r\n        component.changeEditableState();\r\n        expect(component).toBeTruthy();\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}